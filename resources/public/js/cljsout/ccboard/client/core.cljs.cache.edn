{:rename-macros {}, :renames {}, :externs {window {}}, :use-macros {}, :excludes #{}, :name ccboard.client.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, jayq jayq.core, jayq.core jayq.core, coord ccboard.client.model.coord, ccboard.client.model.coord ccboard.client.model.coord}, :uses nil, :defs {only-pos-atom {:name ccboard.client.core/only-pos-atom, :file "src/cljs/ccboard/client/core.cljs", :line 14, :column 1, :end-line 14, :end-column 19, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 14, :column 6, :end-line 14, :end-column 19}, :tag any}, test-handler {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 16, :column 7, :end-line 16, :end-column 19, :arglists (quote ([id special-message & [args]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(id special-message [args])], :arglists ([id special-message & [args]]), :arglists-meta (nil)}}, :name ccboard.client.core/test-handler, :variadic true, :file "src/cljs/ccboard/client/core.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(id special-message [args])], :arglists ([id special-message & [args]]), :arglists-meta (nil)}, :method-params [(id special-message [args])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists ([id special-message & [args]])}, single-green-ball-reactive-elem {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 32, :column 7, :end-line 32, :end-column 38, :arglists (quote ([pos-atom id]))}, :name ccboard.client.core/single-green-ball-reactive-elem, :variadic false, :file "src/cljs/ccboard/client/core.cljs", :end-column 38, :method-params ([pos-atom id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos-atom id]))}, wire-keyboard-support! {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 71, :column 7, :end-line 71, :end-column 29, :arglists (quote ([]))}, :name ccboard.client.core/wire-keyboard-support!, :variadic false, :file "src/cljs/ccboard/client/core.cljs", :end-column 29, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, svg-target {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 95, :column 7, :end-line 95, :end-column 17, :arglists (quote ([]))}, :name ccboard.client.core/svg-target, :variadic false, :file "src/cljs/ccboard/client/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init-single-green-ball! {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 99, :column 7, :end-line 99, :end-column 30, :arglists (quote ([]))}, :name ccboard.client.core/init-single-green-ball!, :variadic false, :file "src/cljs/ccboard/client/core.cljs", :end-column 30, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, setup! {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 104, :column 7, :end-line 104, :end-column 13, :arglists (quote ([]))}, :name ccboard.client.core/setup!, :variadic false, :file "src/cljs/ccboard/client/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:y :right-arrow :r :fill :circle :cursor :piece17 :draggable :cx :cy :on-mouse-move :down-arrow :left-arrow :x :up-arrow}, :order [:x :y :circle :draggable :cursor :on-mouse-move :fill :r :cx :cy :left-arrow :up-arrow :right-arrow :down-arrow :piece17]}, :doc nil}