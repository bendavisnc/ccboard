{:rename-macros {}, :renames {}, :externs {d3 {event {dx {}, dy {}}, drag {}}, Object {on {}}}, :use-macros {}, :excludes #{}, :name ccboard.client.core, :imports nil, :requires {jayq jayq.core, jayq.core jayq.core, coord ccboard.client.model.coord, ccboard.client.model.coord ccboard.client.model.coord, d3 d3.core, d3.core d3.core}, :uses nil, :defs {svg-d3 {:name ccboard.client.core/svg-d3, :file "src/cljs/ccboard/client/core.cljs", :line 21, :column 1, :end-line 21, :end-column 12, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 21, :column 6, :end-line 21, :end-column 12}, :tag any}, piece-data {:name ccboard.client.core/piece-data, :file "src/cljs/ccboard/client/core.cljs", :line 24, :column 1, :end-line 24, :end-column 16, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 24, :column 6, :end-line 24, :end-column 16}, :tag cljs.core/IVector}, cx {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 27, :column 7, :end-line 27, :end-column 9, :arglists (quote ([d]))}, :name ccboard.client.core/cx, :variadic false, :file "src/cljs/ccboard/client/core.cljs", :end-column 9, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, cy {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 30, :column 7, :end-line 30, :end-column 9, :arglists (quote ([d]))}, :name ccboard.client.core/cy, :variadic false, :file "src/cljs/ccboard/client/core.cljs", :end-column 9, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, init-single-blue-dot! {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 33, :column 7, :end-line 33, :end-column 28, :arglists (quote ([]))}, :name ccboard.client.core/init-single-blue-dot!, :variadic false, :file "src/cljs/ccboard/client/core.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, on-drag! {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 48, :column 7, :end-line 48, :end-column 15, :arglists (quote ([d]))}, :name ccboard.client.core/on-drag!, :variadic false, :file "src/cljs/ccboard/client/core.cljs", :end-column 15, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, on-drag-start! {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 77, :column 7, :end-line 77, :end-column 21, :arglists (quote ([d]))}, :name ccboard.client.core/on-drag-start!, :variadic false, :file "src/cljs/ccboard/client/core.cljs", :end-column 21, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, enable-dragging! {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 80, :column 7, :end-line 80, :end-column 23, :arglists (quote ([]))}, :name ccboard.client.core/enable-dragging!, :variadic false, :file "src/cljs/ccboard/client/core.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, setup! {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljs/ccboard/client/core.cljs", :line 90, :column 7, :end-line 90, :end-column 13, :arglists (quote ([]))}, :name ccboard.client.core/setup!, :variadic false, :file "src/cljs/ccboard/client/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:cx :cy}, :order [:cx :cy]}, :doc nil}