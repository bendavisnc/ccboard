{:rename-macros {}, :renames {}, :externs {Error {}}, :use-macros {}, :excludes #{}, :name ccboard.shared.model.move-event, :imports nil, :requires nil, :uses nil, :defs {IMoveEvent {:meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljc/ccboard/shared/model/move_event.cljc", :line 3, :column 14, :end-line 3, :end-column 24, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {piece [[this]], movement-data [[this]]}}}, :protocol-symbol true, :name ccboard.shared.model.move-event/IMoveEvent, :file "src/cljc/ccboard/shared/model/move_event.cljc", :end-column 24, :column 1, :line 3, :protocol-info {:methods {piece [[this]], movement-data [[this]]}}, :info nil, :end-line 3, :tag any, :impls #{ccboard.shared.model.move-event/MoveEvent}, :doc nil, :jsdoc ("@interface")}, piece {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljc/ccboard/shared/model/move_event.cljc", :line 4, :column 4, :end-line 4, :end-column 9, :protocol ccboard.shared.model.move-event/IMoveEvent, :doc "The piece that was moved.", :arglists (quote ([this]))}, :protocol ccboard.shared.model.move-event/IMoveEvent, :name ccboard.shared.model.move-event/piece, :variadic false, :file "src/cljc/ccboard/shared/model/move_event.cljc", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "The piece that was moved."}, movement-data {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljc/ccboard/shared/model/move_event.cljc", :line 5, :column 4, :end-line 5, :end-column 17, :protocol ccboard.shared.model.move-event/IMoveEvent, :doc "All of the positions (x y coords) that the piece moved.", :arglists (quote ([this]))}, :protocol ccboard.shared.model.move-event/IMoveEvent, :name ccboard.shared.model.move-event/movement-data, :variadic false, :file "src/cljc/ccboard/shared/model/move_event.cljc", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "All of the positions (x y coords) that the piece moved."}, MoveEvent {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable ccboard.shared.model.move-event/IMoveEvent cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name ccboard.shared.model.move-event/MoveEvent, :file "src/cljc/ccboard/shared/model/move_event.cljc", :end-column 21, :type true, :column 12, :internal-ctor true, :line 7, :record true, :end-line 7, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->MoveEvent {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljc/ccboard/shared/model/move_event.cljc", :line 7, :column 12, :end-line 7, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([piece movement-data]))}, :name ccboard.shared.model.move-event/->MoveEvent, :variadic false, :file "src/cljc/ccboard/shared/model/move_event.cljc", :end-column 21, :method-params ([piece movement-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([piece movement-data]))}, map->MoveEvent {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljc/ccboard/shared/model/move_event.cljc", :line 7, :column 12, :end-line 7, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__8615]))}, :name ccboard.shared.model.move-event/map->MoveEvent, :variadic false, :file "src/cljc/ccboard/shared/model/move_event.cljc", :end-column 21, :method-params ([G__8615]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__8615]))}, create {:protocol-inline nil, :meta {:file "/home/ben/Programming/Clojure/ccboard/src/cljc/ccboard/shared/model/move_event.cljc", :line 13, :column 7, :end-line 13, :end-column 13, :arglists (quote ([m] [piece movement-data])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([m] [piece movement-data]), :arglists ([m] [piece movement-data]), :arglists-meta (nil nil)}}, :name ccboard.shared.model.move-event/create, :variadic false, :file "src/cljc/ccboard/shared/model/move_event.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([m] [piece movement-data]), :arglists ([m] [piece movement-data]), :arglists-meta (nil nil)}, :method-params ([m] [piece movement-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists ([m] [piece movement-data])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{movement-data :piece piece :movement-data}, :order [:piece :movement-data piece movement-data]}, :doc nil}